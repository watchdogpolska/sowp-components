<% var hash = _.chain(glyphs).join().map(function(a){return a.charCodeAt(0);}).sum()%>
@font-face {
  font-family: "<%= fontName %>";
  src: url('<%= fontPath %><%= fontName %>.eot?=<%= hash %>');
  src: url('<%= fontPath %><%= fontName %>.eot?=<%= hash %>#iefix') format('eot'),
    url('<%= fontPath %><%= fontName %>.woff2?=<%= hash %>') format('woff2'),
    url('<%= fontPath %><%= fontName %>.woff?=<%= hash %>') format('woff'),
    url('<%= fontPath %><%= fontName %>.ttf?=<%= hash %>') format('truetype'),
    url('<%= fontPath %><%= fontName %>.svg?=<%= hash %>#<%= fontName %>') format('svg');
}

@mixin <%= cssClass%>-styles {
  font-family: "<%= fontName %>";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
  text-decoration: none;
  text-transform: none;
  line-height: 1;
}

.<%= cssClass%> {
  @include <%= cssClass%>-styles;
}

@function <%= cssClass%>-char($filename) {
  $char: "";
<% _.each(glyphs, function(glyph) { %>
  @if $filename == <%= glyph.fileName %> {
    $char: "\<%= glyph.codePoint %>";
  }<% }); %>

  @return $char;
}

@mixin <%= cssClass%>($filename, $insert: before, $extend: true) {
  &:#{$insert} {
    @if $extend {
      @extend .<%= cssClass%>;
    } @else {
      @include <%= cssClass%>-styles;
    }
    content: <%= cssClass%>-char($filename);
  }
}

<% _.each(glyphs, function(glyph) { %>.<%= cssClass%>-<%= glyph.fileName %> {
  &:before {
    content: <%= cssClass%>-char(<%= glyph.fileName %>);
  }
}
<% }); %>
